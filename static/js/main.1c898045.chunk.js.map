{"version":3,"sources":["components/Nav.js","components/BookData.js","components/BookOpts.js","components/Status.js","components/Progress.js","components/Books.js","components/NewBook.js","components/Categories.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","BookData","category","name","author","BookOpts","href","Status","percentage","Progress","chapter","type","Book","info","NewBook","placeholder","id","defaultValue","value","Categories","books","App","bookList","map","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c898045.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Link,\n} from 'react-router-dom';\n\nconst Header = () => (\n  <>\n    <div className=\"title-navbar\">\n      <h1 className=\"title-h1\">Bookstore CMS</h1>\n      <nav className=\"nav-links\">\n        <ul>\n          <li>\n            <Link to=\"/\">BOOKS</Link>\n          </li>\n          <li>\n            <Link to=\"/categories\">CATEGORIES</Link>\n          </li>\n        </ul>\n      </nav>\n    </div>\n    <span><i /></span>\n  </>\n);\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BookData = ({ category, name, author }) => (\n  <div>\n    <p className=\"category\">{category}</p>\n    <p className=\"title\">{name}</p>\n    <p className=\"author\">{author}</p>\n  </div>\n);\n\nBookData.propTypes = {\n  category: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n};\n\nexport default BookData;\n","import React from 'react';\n\nconst BookOpts = () => (\n  <div className=\"book-actions\">\n    <a href=\"/#\">Comments</a>\n    {' | '}\n    <a href=\"/#\">Remove</a>\n    {' | '}\n    <a href=\"/#\">Edit</a>\n  </div>\n);\n\nexport default BookOpts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Status = ({ percentage }) => (\n  <div className=\"book-completion-status\">\n    <i />\n    <p className=\"completion-percentage\">{percentage}</p>\n    <p>Completed</p>\n  </div>\n);\n\nStatus.propTypes = {\n  percentage: PropTypes.string.isRequired,\n};\n\nexport default Status;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Progress = ({ chapter }) => (\n  <div className=\"book-progress\">\n    <p>CURRENT CHAPTER</p>\n    <p className=\"book-progress-chapter\">{chapter}</p>\n    <button type=\"button\">UPDATE PROGRESS</button>\n  </div>\n);\n\nProgress.propTypes = {\n  chapter: PropTypes.string.isRequired,\n};\n\nexport default Progress;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport BookData from './BookData';\nimport BookOpts from './BookOpts';\nimport Status from './Status';\nimport Progress from './Progress';\n\nconst Book = ({ info }) => (\n  <div className=\"book-row\">\n    <div className=\"book-first-column\">\n      <BookData category={info.category} name={info.name} author={info.author} />\n      <BookOpts />\n    </div>\n    <div className=\"book-remaining-column\">\n      <Status percentage={info.percentage} />\n      <Progress chapter={info.chapter} />\n    </div>\n  </div>\n);\n\nBook.propTypes = {\n  info: PropTypes.shape({\n    id: PropTypes.number,\n    category: PropTypes.string,\n    name: PropTypes.string,\n    author: PropTypes.string,\n    percentage: PropTypes.string,\n    chapter: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Book;\n","import React from 'react';\n\nconst NewBook = () => (\n  <>\n    <h2>ADD NEW BOOK</h2>\n    <div className=\"add-book-form\">\n      <input className=\"book-input\" placeholder=\"Book title\" />\n      <select className=\"category-select\" name=\"categories\" id=\"categories\">\n        <option defaultValue=\"\">Category</option>\n        <option value=\"action\">Action</option>\n        <option value=\"science-fiction\">Science Fiction</option>\n        <option value=\"economy\">Economy</option>\n      </select>\n      <input className=\"add-book-button\" type=\"submit\" value=\"ADD BOOK\" />\n    </div>\n  </>\n);\n\nexport default NewBook;\n","import React from 'react';\n\nconst Categories = () => (\n  <h1>Under construction</h1>\n);\n\nexport default Categories;\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport Header from './components/Nav';\nimport Book from './components/Books';\nimport NewBook from './components/NewBook';\nimport Categories from './components/Categories';\n\nconst books = [\n  {\n    id: 1,\n    category: 'Action',\n    name: 'The Hunger Games',\n    author: 'Suzanne Collins',\n    percentage: '64%',\n    chapter: 'Chapter 17',\n  },\n  {\n    id: 2,\n    category: 'Science Fiction',\n    name: 'Dune',\n    author: 'Frank Herbert',\n    percentage: '8%',\n    chapter: 'Chapter 3: \"A Lesson Learned\"',\n  },\n  {\n    id: 3,\n    category: 'Economy',\n    name: 'Capital in the Twenty-First Century',\n    author: 'Suzanne Collins',\n    percentage: '0%',\n    chapter: 'Introduction',\n  },\n];\n\nconst App = () => {\n  const bookList = books.map((books) => <Book key={books.id} info={books} />);\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          { bookList }\n          <NewBook />\n        </Route>\n        <Route path=\"/categories\">\n          <Categories />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}